<template>
    <view class="page">
        <template v-if="loading">
            <view class="loading" @click="() => {}">
                <view class="panel">
                    <image class="icon" src="/static/loading.png" ref="loading"></image>
                </view>
            </view>
        </template>
        <template v-if="state == 1">
            <form class="login" @submit="onSubmitLogin">
                <view class="logo">
                    <image class="icon" src="/static/logo.png" @click="onSetCopyToken"></image>
                    <text class="title">智慧门禁</text>
                </view>
                <view class="input">
                    <image class="icon" src="/static/icon_user.png"></image>
                    <input class="text" type="tel" placeholder="请输入手机号码" @input="mobile = $event.detail.value" />
                </view>
                <view class="input">
                    <image class="icon" src="/static/icon_safety.png"></image>
                    <input class="text" type="text" placeholder="请输入登录密码" @input="security = $event.detail.value" />
                </view>
                <button class="button" form-type="submit">
                    <text class="color">登录</text>
                </button>
            </form>
        </template>
        <template v-if="state == 2">
            <list class="scroll" show-scrollbar="false" @click="onGetCopyToken">
                <refresh class="refresh" @refresh="onSubmitRefresh" :display="refresh ? 'show' : 'hide'"></refresh>
                <cell class="panel" :class="{less: keyless.length <= 2, more: keyless.length > 2}">
                    <view class="logout">
                        <text class="color" @click="onSubmitLogout">退出登录</text>
                    </view>
                    <template v-if="keyless.length == 0">
                        <view class="keyless">
                            <view class="button">
                                <image class="icon" src="/static/logo_disable.png"></image>
                            </view>
                            <text class="region">未找到你的智慧门禁</text>
                            <text class="location">请先到官方APP登录确认</text>
                        </view>
                    </template>
                    <template v-if="keyless.length != 0">
                        <view class="keyless" v-for="item in keyless" :key="item.id">
                            <button class="button" :dataDisabled="item.disabled" :dataId="item.id" :dataLocation="item.location" @click="onSubmitUnlock">
                                <image class="icon" src="/static/logo_disable.png" v-if="item.disabled"></image>
                                <image class="icon" src="/static/logo.png" v-else></image>
                            </button>
                            <text class="region">{{item.region}}</text>
                            <text class="location">{{item.location}}</text>
                        </view>
                    </template>
                    <view class="placeholder"></view>
                </cell>
            </list>
        </template>
        <template v-if="state == 3">
            <view class="warning" @click="onSubmitCancel">
                <view class="panel">
                    <image class="icon" src="/static/warning.png"></image>
                    <text class="title">即将打开上次选择的门禁</text>
                    <text class="subtitle">{{gateway.location}}</text>
                    <text class="desc">点击屏幕任意地方，进入手动选择模式</text>
                </view>
            </view>
        </template>
    </view>
</template>

<script>
    export default {
        data() {
            return {
                // 全局原子锁
                atomic: false,
                // 页面下拉状态
                refresh: false,
                // 页面视图状态 (0空白, 1登录, 2功能)
                state: 0,
                // 加载动画
                loading: false,
                // 授权密钥
                authorization: '',
                // 上次打开的门禁网关
                gateway: '',
                // 手机号码
                mobile: '',
                // 登录密码
                security: '',
                // 钥匙列表
                keyless: [],
                // 复制计次开关
                copyCount: 0,
            }
        },
        onLoad() {
            this.checkLogin();
        },
        methods: {
            // 全局休眠
            startSleep(time = 0) {
                return new Promise((resolve, reject) => {
                    setTimeout(() => resolve(), time);
                })
            },
            // 全局原子锁
            atomicLock() {
                setTimeout(() => {
                    this.atomic = true;
                    clearTimeout(this.atomicTimer);
                    this.atomicTimer = setTimeout(() => {
                        this.atomic = false;
                    }, 300);
                });
                return this.atomic;
            },
            // 验证表单信息
            checkForm() {
                if (this.mobile.length === 0) {
                    uni.showToast({ title: '请输入手机号码', icon: 'none' });
                    return false;
                }
                else if (!/^1[0-9]{10}$/.test(this.mobile)) {
                    uni.showToast({ title: '请输入正确的手机号码', icon: 'none' });
                    return false;
                }
                else if (this.security.length === 0) {
                    uni.showToast({ title: '请输入登录密码', icon: 'none' });
                    return false;
                }
                else if (this.security.length < 6 || this.security.length > 15) {
                    uni.showToast({ title: '请输入正确的登录密码', icon: 'none' });
                    return false;
                }
                else {
                    return true;
                }
            },
            // 播放加载动画
            async playLoading() {
                if (this.loading === false) {
                    this.loading = true;
                    this.$nextTick(() => {
                        uni.requireNativePlugin('animation').transition(this.$refs.loading, {
                            styles: { transform: 'rotate(36000deg)' },
                            timingFunction: 'linear',
                            duration: 60000,
                        });
                    });
                }
                await this.startSleep(150);
                return this.loading;
            },
            // 停止加载动画
            async stopLoading() {
                await this.startSleep(150);
                return this.loading = false;
            },
            // 验证是否登录
            async checkLogin() {
                await this.playLoading();
                this.gateway = this.gateway || uni.getStorageSync('Gateway') || '';
                this.authorization = this.authorization || uni.getStorageSync('Authorization') || '';
                if (this.authorization.length === 0) {
                    this.state = 1;
                    return await this.stopLoading();
                }
                const [error, result] = await uni.request({
                    method: 'GET',
                    url: 'https://smartims-api.heyzhima.com/mainapp/v2/user/keys',
                    header: { 'Authorization': `Bearer ${this.authorization}` },
                    data: { phone: this.mobile },
                });
                if (error !== null) {
                    this.state = 1;
                    uni.showToast({ title: '网络请求失败', icon: 'none' });
                    return await this.stopLoading();
                }
                if (result.data.code === 401) {
                    this.state = 1;
                    this.authorization = '';
                    uni.removeStorageSync('Authorization');
                    uni.removeStorageSync('Gateway');
                    return await this.stopLoading();
                }
                if (result.data.code !== 200) {
                    this.state = 1;
                    uni.showToast({ title: result.data.msg, icon: 'none' });
                    return await this.stopLoading();
                }
                this.keyless = result.data.data.map(item => {
                    return {
                        id: item.uid,
                        device: item.device_id,
                        region: item.zone_name,
                        location: item.path,
                        disabled: item.device_online !== 'Y',
                    };
                });
                if (Object.keys(this.gateway).length !== 0) {
                    let keylessValue = this.keyless.filter(item => item.id === this.gateway.id).pop();
                    if (keylessValue && keylessValue.disabled === false) {
                        this.state = 3;
                        this.gatewayCountdown = setTimeout(() => this.onSubmitUnlock(keylessValue), 1200);
                        return await this.stopLoading();
                    }
                }
                this.state = 2;
                this.gateway = '';
                uni.removeStorageSync('Gateway');
                await this.stopLoading();
            },
            // 提交登录请求
            async onSubmitLogin() {
                if (this.atomicLock() === false && this.checkForm()) {
                    await this.playLoading();
                    const [error, result] = await uni.request({
                        method: 'POST',
                        url: 'https://smartims-api.heyzhima.com/api/v3/user/login',
                        data: { mobile: this.mobile, pwd_value: this.security },
                    });
                    if (error !== null) {
                        uni.showToast({ title: '网络请求失败', icon: 'none' });
                        return await this.stopLoading();
                    }
                    if (result.data.errcode !== 0) {
                        uni.showToast({ title: result.data.msg, icon: 'none' });
                        return await this.stopLoading();
                    }
                    this.authorization = result.data.data?.token ?? '';
                    uni.setStorageSync('Authorization', this.authorization);
                    await this.checkLogin();
                }
            },
            // 提交解锁请求
            async onSubmitUnlock(event) {
                let eventData = event?.currentTarget?.dataset ?? event;
                if (this.atomicLock() === false && eventData.disabled === false) {
                    await this.playLoading();
                    const [error, result] = await uni.request({
                        method: 'POST',
                        url: 'https://smartims-api.heyzhima.com/mainapp/v2/gates/open',
                        header: { 'Authorization': `Bearer ${this.authorization}` },
                        data: { gate_uid: eventData.id },
                    });
                    if (error !== null) {
                        uni.vibrateLong();
                        uni.showToast({ title: '网络请求失败', icon: 'none' });
                        return await this.stopLoading();
                    }
                    if (result.data.code === 401) {
                        this.state = 1;
                        this.authorization = '';
                        uni.removeStorageSync('Authorization');
                        uni.removeStorageSync('Gateway');
                        uni.vibrateLong();
                        return await this.stopLoading();
                    }
                    if (result.data.code !== 200) {
                        uni.vibrateLong();
                        uni.showToast({ title: result.data.msg, icon: 'none' });
                        return await this.stopLoading();
                    }
                    this.state = 2;
                    uni.setStorageSync('Gateway', eventData);
                    uni.vibrateShort();
                    uni.showToast({ title: '欢迎回家', icon: 'success' });
                    await this.stopLoading();
                }
            },
            // 退出登录状态
            async onSubmitLogout() {
                if (this.atomicLock() === false) {
                    await this.playLoading();
                    this.state = 1;
                    this.keyless = [];
                    this.authorization = '';
                    uni.removeStorageSync('Authorization');
                    uni.removeStorageSync('Gateway');
                    await this.stopLoading();
                }
            },
            // 进入手动模式
            async onSubmitCancel() {
                if (this.atomicLock() === false && Object.keys(this.gateway).length !== 0) {
                    clearTimeout(this.gatewayCountdown);
                    await this.playLoading();
                    this.state = 2;
                    this.gateway = '';
                    uni.removeStorageSync('Gateway');
                    await this.stopLoading();
                }
            },
            // 启动下拉刷新
            async onSubmitRefresh() {
                this.refresh = true;
                await this.checkLogin();
                this.refresh = false;
            },
            // 复制授权密钥
            async onGetCopyToken() {
                this.copyCount = this.copyCount + 1;
                if (this.copyCount === 10) {
                    this.copyCount = 0;
                    uni.setClipboardData({ data: this.authorization });
                    uni.showToast({ title: '复制成功', icon: 'success' });
                }
            },
            // 设置授权密钥
            async onSetCopyToken() {
                let self = this;
                self.copyCount = self.copyCount + 1;
                if (self.copyCount === 10) {
                    self.copyCount = 0;
                    uni.getClipboardData({
                        async success(result) {
                            self.authorization = result.data;
                            uni.setStorageSync('Authorization', self.authorization);
                            uni.showToast({ title: '写入成功', icon: 'success' });
                            await self.checkLogin();
                        },
                    });
                }
            },
        },
    };
</script>

<style scoped lang="scss">
.page {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.refresh {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 64rpx;
}

.scroll {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;

    .panel {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;

        &.less {
            position: absolute;
            left: 0;
            right: 0;
            top: 0;
            bottom: 1rpx;
        }

        &.more {
            padding: 128rpx 0;
        }
    }
}

.loading {
    position: fixed;
    z-index: 1;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    background: #FFFFFF;

    .panel {
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .icon {
        width: 160rpx;
        height: 160rpx;
    }
}

.warning {
    position: fixed;
    z-index: 0;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    background: #FFFFFF;

    .panel {
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .icon {
        width: 160rpx;
        height: 160rpx;
    }

    .title {
        margin: 40rpx 0 10rpx;
        line-height: 28rpx;
        color: #222222;
        font-size: 28rpx;
    }

    .subtitle {
        margin: 10rpx 0;
        line-height: 24rpx;
        color: #666666;
        font-size: 24rpx;
    }

    .desc {
        margin: 10rpx 0 40rpx;
        line-height: 24rpx;
        color: #666666;
        font-size: 24rpx;
    }
}

.login {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    .logo {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;

        .icon {
            width: 200rpx;
            height: 200rpx;
        }

        .title {
            margin-top: 20rpx;
            line-height: 36rpx;
            color: #222222;
            font-size: 36rpx;
        }
    }

    .input {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        margin-top: 40rpx;
        padding: 0 20rpx 0 30rpx;
        width: 600rpx;
        height: 88rpx;
        border: 1rpx solid #365FBB;
        border-radius: 100px;

        .icon {
            width: 40rpx;
            height: 40rpx;
        }

        .text {
            flex: 1;
            padding: 0 10rpx;
            height: 64rpx;
            line-height: 64rpx;
            color: #222222;
            font-size: 28rpx;
        }

        .code {
            padding: 0 20rpx;
            height: 64rpx;
            line-height: 64rpx;
            color: #365FBB;
            font-size: 28rpx;
            text-align: center;

            &.color {
                width: 100rpx;
                color: #999999;
            }
        }
    }

    .button {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin-top: 40rpx;
        width: 600rpx;
        height: 88rpx;
	    background: linear-gradient(to right, #5F98FC, #365FBB);
        border: 1rpx solid #365FBB;
        border-radius: 100px;

        .color {
            color: #FFFFFF;
            font-size: 36rpx;
        }
    }
}

.logout {
    display: flex;
    align-items: center;
    justify-content: center;
    border-top: 6rpx solid #5F98FC;
    border-bottom: 6rpx solid #5F98FC;
    margin-bottom: 128rpx;

    .color {
        padding: 0 20rpx;
        line-height: 64rpx;
        color: #5F98FC;
        font-size: 28rpx;
    }
}

.keyless {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    .button {
        width: 240rpx;
        height: 240rpx;
        border-radius: 100px;

        .icon {
            width: 240rpx;
            height: 240rpx;
            border-radius: 100px;
        }
    }

    .region {
        margin: 40rpx 0 10rpx;
        line-height: 24rpx;
        color: #666666;
        font-size: 24rpx;
    }

    .location {
        margin: 10rpx 0 40rpx;
        line-height: 28rpx;
        color: #222222;
        font-size: 28rpx;
    }
}

.placeholder {
    margin-top: -40rpx;
}
</style>
